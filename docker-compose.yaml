version: "3.9"
services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - ./api/.env
    volumes:
      - ./api:/app
    ports:
      - 8080:8080
    command: gunicorn --workers 4 --reload --log-level debug --bind 0.0.0.0:8080 src.main:app
    depends_on:
      - db

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: db_admin
      POSTGRES_PASSWORD: db_admin
    volumes:
      - ./scripts/postgress-init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - chat_app_db:/var/lib/postgresql
    ports:
      - 5435:5432

  fileserver:
    build:
      context: ./fileserver
      dockerfile: Dockerfile
    volumes:
      - ./fileserver:/app
    env_file:
      - ./fileserver/.env
    ports:
      - 8090:8000
    command: uvicorn --host 0.0.0.0 --port 8000 src.app:app --reload
  
  # sonarqube:
  #   image: sonarqube:latest
  #   environment:
  #     SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
  #     SONAR_JDBC_USERNAME: db_admin
  #     SONAR_JDBC_PASSWORD: db_admin
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - sonarqube_conf:/opt/sonarqube/conf
  #     - sonarqube_data:/opt/sonarqube/data
  #     - sonarqube_extensions:/opt/sonarqube/extensions
  #     - sonarqube_logs:/opt/sonarqube/logs
  #   depends_on:
  #     - db

volumes:
  chat_app_db:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
